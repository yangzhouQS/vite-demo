import type { ColorPropertyDefine, ColorsPropertyDefine, PartialThemeDefine, RequiredThemeDefine, ThemeDefine } from "../ts-types";
declare const _: "$$$$private symbol$$$$";
export declare class Theme implements RequiredThemeDefine {
    private [_];
    private _checkbox;
    private _radioButton;
    private _button;
    private _header;
    private _messages;
    constructor(obj: ThemeDefine);
    constructor(obj: PartialThemeDefine, superTheme: ThemeDefine);
    get font(): string;
    get underlayBackgroundColor(): string;
    get color(): ColorPropertyDefine;
    get frozenRowsColor(): ColorPropertyDefine;
    get defaultBgColor(): ColorPropertyDefine;
    get frozenRowsBgColor(): ColorPropertyDefine;
    get selectionBgColor(): ColorPropertyDefine;
    get highlightBgColor(): ColorPropertyDefine;
    get borderColor(): ColorsPropertyDefine;
    get frozenRowsBorderColor(): ColorsPropertyDefine;
    get highlightBorderColor(): ColorsPropertyDefine;
    get checkbox(): RequiredThemeDefine["checkbox"];
    get radioButton(): RequiredThemeDefine["radioButton"];
    get button(): RequiredThemeDefine["button"];
    get header(): RequiredThemeDefine["header"];
    get messages(): RequiredThemeDefine["messages"];
    hasProperty(names: string[]): boolean;
    extends(obj: PartialThemeDefine): Theme;
}
export {};
